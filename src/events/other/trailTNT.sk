
import:
	org.bukkit.event.block.TNTPrimeEvent as tnt primed


on tnt primed:
	set {_e} to event.getPrimingEntity()
	if {_e} isn't a player:
		exit
	wait 1 tick
	
	loop all entities:
		if type of loop-entity is TNT:	
			set {_tnt} to loop-entity
		
	if {_tnt} is set:
		set metadata tag "owner" of {_tnt} to {_e}


on explode:
	event-entity is tnt
	cancel event

	loop getConnectedBlocks(block at event-entity):
		if isValidBlock(loop-block) is true:
			set {_b} to loop-block
			exit loop
	
	if {_b} isn't set:
		exit
	set {_id} to random uuid
	set {tnt::%{_id}%} to 30
	set {_owner} to metadata tag "owner" of event-entity
	if {_owner}'s helmet is a creeper skull:
		set {tnt::%{_id}%} to 60
	if metadata tag "power" of {_owner} is "creeper":
		if {_owner}'s helmet is a dragon head:
			set {tnt::%{_id}%} to 60
	run({_b}, {_id})

function isValidBlock(b: location) :: boolean:
	if block at {_b} is bedrock:
		return false
	if block at {_b} isn't solid:
		return false
	if block at {_b} is cobbled deepslate:
		return false
	return true

function getConnectedBlocks(block: block) :: blocks:
	add block south of {_block} to {_blocks::*}
	add block north of {_block} to {_blocks::*}
	add block east of {_block} to {_blocks::*}
	add block west of {_block} to {_blocks::*}
	add block above {_block} to {_blocks::*}
	add block below {_block} to {_blocks::*}
	return {_blocks::*}

function run(block: block, id: string):
	loop getConnectedBlocks({_block}):
		if {tnt::%{_id}%} ? 0 <= 0:
			exit
		if isValidBlock(loop-block) is true:

			if {tnt::%{_id}%} ? 0 <= 0:
				exit
			show cloud at loop-block
			break loop-block naturally using air
			play sound "minecraft:block.gravel.break" at volume 0.5 at pitch 0.5 at loop-block
			play sound "minecraft:item.dye.use" at volume 0.5 at pitch 0.5 at loop-block

			subtract 1 from {tnt::%{_id}%}
			wait 4 ticks
			run(loop-block, {_id})