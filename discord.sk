options:


	bot: "Asleepens"
	server: "1105165795169947810"
	guild: "1105153184575541331"
	token: ""
#
# load discord bot
#

define new bot named "Asleepens":
	token: {@token}
	intents: default intents
	policy: all
	auto reconnect: true
	compression: none
	on ready:
		send "Bot is ready" to console

on chat:
	send "%player%: %message%" to console
#on watching file changes at "logs/latest.log":

#	if {lastWatch} isn't set:
#		set {lastWatch} to now
		
#	if difference between {lastWatch} and now <= 1 second:
#		exit
#	else:
#		set {lastWatch} to now

#	set {_content::*} to content of event-path
#	set {_content::*} to reversed {_content::*}
#	if size of {lastContent::*} >= 64:
#		clear {lastContent::*}

#	loop 8 times:
#		set {_current} to {_content::%loop-value%}
#		if {lastContent::*} contains {_current}:
#			continue
#		add {_current} to {lastContent::*}
#		add {_current} to {_current::*}
	
	
	
#	set {_content} to join reversed {_current::*} with "%nl%"
#	make embed:
#		set embed color of embed to hex "2b2d31"
#		set description of embed to {_content}
#	post last embed to channel with id "1114059156975005707"


on chat:
	set {_message} to message
	replace all "@" in {_message} with ""
	length of {_message} > 0
	#if {_message} doesn't match matches "[a-zA-Z0-9,.?:'""’\[\]{}!@&##$%^“”*:()_\^+-=`~<>\\;\s]":
		#continue
	
	create new message and store it in {_msg}:
		set content of message to "%player%: %{_message}%"
	post {_msg} to channel with id {@server}

#
# send discord user message from server channel to in-game
#

on message received:
	message is from guild
	discord id of event-channel is {@server}
	event-user isn't a discord bot
	set {_content} to unformatted content of event-message
	set {_newLine} to System.getProperty("line.separator")
	set {_boolean} to ({_content}).contains(newline)
	if {_boolean} is true:
		reply with "Please avoid using new lines, it spams the chat."
		timeout event-member for 1 minute due to "newLine spam"
		exit
	length of {_content} > 0
	send "&b%discord name of event-user%:&f %({_content}).trim()%" to players
	
	
command /report <player> <string>:
	cooldown: 5 seconds
	trigger:
		make embed:
			set title of embed to "Report"
			set description of embed to "``%arg-1%`` has been reported by ``%sender%`` for ``%arg-2%``"
			set embed color of embed to hex "2b2d31"
		post last embed to channel with id "1105174617791930469"
		send "&7Reported &f%arg-1%&7 for &f%arg-2%"
		
on load: # it WILL NOT be inside of that, here it's just for testing :p
	set {_list} to new slash command named "list" with description "Get the player list of the server."
	
	set {_mcban} to new slash command named "mcban" with description "Ban a player from in-game via Discord"
	add new required string option named "player" with description "The player to ban" to options of {_mcban}
	add new required string option named "reason" with description "Optional reason" to options of {_mcban}

	set {_mcunban} to new slash command named "mcunban" with description "Unban a player from in-game via Discord"
	add new required string option named "player" with description "The player to unban" to options of {_mcunban}
	add new required string option named "reason" with description "Optional reason" to options of {_mcunban}

	set {_mcunmute} to new slash command named "mcunmute" with description "Unmute a player from in-game via Discord"
	add new required string option named "player" with description "The player to unmute" to options of {_mcunmute}
	add new required string option named "reason" with description "Optional reason" to options of {_mcunmute}
	
	set {_mcmute} to new slash command named "mcmute" with description "Mute a player from in-game via Discord"
	add new required string option named "player" with description "The player to mute" to options of {_mcmute}
	add new required string option named "reason" with description "Optional reason" to options of {_mcmute}

	set {_mapReset} to new slash command named "whenismapreset" with description "Check the time when map reset occurs"
	

	update {_mcunban}, {_list}, {_mcban}, {_mcmute}, {_mcunmute} and {_mapReset} locally in guild with id {@guild}


		
	
on slash command:
	if event-string is "list":
		set {_p::*} to players where [input's gamemode isn't spectator]
		reply with hidden "Player list: %{_p::*} ? "None"% (%size of {_p::*}%/%max players%)"
	
on slash command:
	if event-string is "whenismapreset":
		reply with hidden "Map resets every 2 days (%difference between 2 days from {mapResetTime} and now%)"

on slash command:
	if event-string is "mcban":
		set {_player} to argument "player" as string
		set {_reason} to (argument "reason" as string)
		
		reply with hidden "Minecraft banned ``%{_player}%`` for ``%{_reason}%``"
		execute console command "ban %{_player}% %{_reason}%"

on slash command:
	if event-string is "mcunban":
		set {_player} to argument "player" as string
		set {_reason} to (argument "reason" as string)
		reply with hidden "Minecraft unbanned ``%{_player}%`` for ``%{_reason}%``"
		execute console command "unban %{_player}% %{_reason}%"

on slash command:
	if event-string is "mcmute":
		set {_player} to argument "player" as string
		set {_reason} to (argument "reason" as string)
		reply with hidden "Minecraft muted ``%{_player}%`` for ``%{_reason}%``"
		execute console command "mute %{_player}% %{_reason}%"
		
on slash command:
	if event-string is "mcunmute":
		set {_player} to argument "player" as string
		set {_reason} to (argument "reason" as string)
		reply with hidden "Minecraft unmuted``%{_player}%`` for ``%{_reason}%``"
		execute console command "unmute %{_player}% %{_reason}%"